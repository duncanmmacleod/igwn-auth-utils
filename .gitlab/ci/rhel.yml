# ---------------------------
# RHEL packaging workflow
# ---------------------------

include:
  # https://computing.docs.ligo.org/gitlab-ci-templates/
  - project: computing/gitlab-ci-templates
    # https://computing.docs.ligo.org/gitlab-ci-templates/rhel/
    file: rhel.yml
  # local test template
  - local: /.gitlab/ci/test.yml

# -- macros

.el:
  variables:
    EPEL: "true"

.el7:
  extends: .el
  image: igwn/base:el7-testing

.el7-build:
  extends: .el7
  image: igwn/builder:el7-testing

.el8:
  extends: .el
  image: igwn/base:el8-testing

.el8-build:
  extends: .el8
  image: igwn/builder:el8-testing

.el9:
  extends: .el
  image: igwn/base:el9-testing

.el9-build:
  extends: .el9
  # igwn/builder:el9 isn't ready
  image: igwn/base:el9-testing

# -- source packages --------
#
# These jobs make src RPMs
#

.srpm:
  extends:
    # https://computing.docs.ligo.org/gitlab-ci-templates/rhel/#.rhel:srpm
    - .rhel:srpm
  stage: Source packages
  needs:
    - tarball
  variables:
    TARBALL: "igwn-auth-utils-*.tar.*"
  before_script:
    - !reference [".rhel:srpm", "before_script"]
    # hack the spec file to use the correct package version
    - tar --file ${TARBALL} --wildcards --strip-components 1 --get igwn-auth-utils*/*.spec igwn-auth-utils*/PKG-INFO
    - PKG_VERSION=$(grep ^Version PKG-INFO | cut -d\  -f2)
    - sed -i 's|define version\( *\)\(.*\)|define unmangled_version '${PKG_VERSION}'\n%define version '${PKG_VERSION/-/+}'|' *.spec
    - sed -i 's|pypi_source|pypi_source %{srcname} %{unmangled_version}|' *.spec
  script:
    - rpmbuild -bs
          --define "_srcrpmdir ${CI_PROJECT_DIR}"
          --define "_sourcedir ${CI_PROJECT_DIR}"
          *.spec

srpm:el7:
  extends:
    - .srpm
    - .el7-build

srpm:el8:
  extends:
    - .srpm
    - .el8-build

srpm:el9:
  extends:
    - .srpm
    - .el9-build

# -- binary packages --------
#
# These jobs generate binary RPMs
# from the src RPMs
#

.rpm:
  extends:
    # https://computing.docs.ligo.org/gitlab-ci-templates/rhel/#.rhel:rpm
    - .rhel:rpm
  stage: Binary packages
  variables:
    SRPM: "python-igwn-auth-utils-*.src.rpm"

rpm:el7:
  extends:
    - .rpm
    - .el7-build
  needs:
    - srpm:el7

rpm:el8:
  extends:
    - .rpm
    - .el8-build
  needs:
    - srpm:el8

rpm:el9:
  extends:
    - .rpm
    - .el9-build
  needs:
    - srpm:el9

# -- test -------------------

.test:el:
  extends:
    # see /.gitlab/ci/test.yml
    - .test
  before_script:
    # set up yum caching
    - !reference [".rhel:base", before_script]
    # configure EPEL
    - yum -y -q install epel-release && yum -y -q install epel-rpm-macros
    # install testing dependencies
    - PY3=$(rpm --eval '%{?python3_pkgversion:%{python3_pkgversion}}%{!?python3_pkgversion:3}')
    - yum -y -q install
          findutils
          python${PY3}-coverage
    # install our package(s)
    - yum -y -q install *.rpm
  script:
    # the test suite requires packages that are too new to be handled
    # by RHEL7 or RHEL8, so we can't test much here
    - |
      cat > test.py << EOF
      from igwn_auth_utils import (x509, scitokens)
      EOF
    - python3 -m coverage run
          --source=igwn_auth_utils
          --omit=*/_version.py
          test.py
  artifacts:
    reports:
      junit: null

test:el7:
  extends:
    - .test:el
    - .el7
  needs:
    - rpm:el7

test:el8:
  extends:
    - .test:el
    - .el8
  needs:
    - rpm:el8

test:el9:
  extends:
    - .test:el
    - .el9
  needs:
    - rpm:el9

# -- lint -------------------
#
# These jobs check the code
# for quality issues
#

.rpmlint:
  extends:
    # https://computing.docs.ligo.org/gitlab-ci-templates/rhel/#.rhel:lint
    - .rhel:lint
  stage: Code quality
  variables:
    GIT_STRATEGY: fetch
    RPMLINT_OPTIONS: '--info --file .rpmlintrc'

rpmlint:el7:
  extends:
    - .rpmlint
    - .el7
  needs:
    - rpm:el7

rpmlint:el8:
  extends:
    - .rpmlint
    - .el8
  needs:
    - rpm:el8

rpmlint:el9:
  extends:
    - .rpmlint
    - .el9
  needs:
    - rpm:el9
